1. 先生成.o 的目标文件 gcc -c formatPrintf.c 生成 formatPrintf.o 文件
2. 生成.a的静态库文件  ar -r libformatPrintf.a formatPrintf.o 
3. 生成可执行程序 gcc main.c libformatPrintf.a -L. -o main.static
此时生成的可执行的程序不依赖当前的库文件了，因为此时的可执行程序中已经包含了静态库文件的内容了，比动态库的确定是
文件变大了，而且加入修改了库文件的话，必须重新编译生成可执行程序才可以

include的头文件仍然需要包含，但是后续的库文件可以不提供，只需要编译好的可执行程序即可

libo@ubuntu:~/Desktop/emulation/Test_lib/Static_lib/test_static_lib$ ldd main.static 
	linux-vdso.so.1 =>  (0x00007fff1dffe000)
	libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f9f2ff89000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f9f30375000)

不再依赖库文件了
