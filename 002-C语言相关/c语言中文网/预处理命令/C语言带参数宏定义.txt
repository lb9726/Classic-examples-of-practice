C语言允许宏带有参数。在宏定义中的参数称为形式参数，在宏调用中的参数称为实际参数，这点和函数有些类似。

对带参数的宏，在调用中，不仅要宏展开，而且要用实参去代换形参。

带参宏定义的一般形式为：
#define 宏名(形参列表) 字符串
在字符串中含有各个形参。

带参宏调用的一般形式为：
宏名(实参列表);
例如：
#define M(y) y*y+3*y  //宏定义
// Code
k=M(5);  //宏调用
在宏调用时，用实参5去代替形参y，经预处理宏展开后的语句为k=5*5+3*5。

【示例】输出两个数中较大的数。
#include <stdio.h>
#define MAX(a,b) (a>b) ? a : b
int main(){
    int x , y, max;
    printf("input two numbers: ");
    scanf("%d %d", &x, &y);
    max = MAX(x, y);
    printf("max=%d\n", max);
    return 0;
}
运行结果：
input two numbers: 10 20
max=20

程序第2行进行了带参宏定义，用宏名MAX表示条件表达式(a>b) ? a : b，形参a、b均出现在条件表达式中。程序第7行max=MAX(x, y)为宏调用，实参 x、y 将代换形参a、b。宏展开后该语句为：
max=(x>y) ? x : y;
对带参宏定义的说明

1) 带参宏定义中，形参之间可以出现空格，但是宏名和形参列表之间不能有空格出现。例如把：
#define MAX(a,b) (a>b)?a:b
写为：
#define MAX  (a,b)  (a>b)?a:b
将被认为是无参宏定义，宏名MAX代表字符串(a,b) (a>b)?a:b。宏展开时，宏调用语句：
max=MAX(x,y);
将变为：
max=(a,b)(a>b)?a:b(x,y);
这显然是错误的。

2) 在带参宏定义中，不会为形式参数分配内存，因此不必指明数据类型。而在宏调用中，实参包含了具体的数据，要用它们去代换形参，因此必须指明数据类型。

这一点和函数是不同的：在函数中，形参和实参是两个不同的变量，都有自己的作用域，调用时要把实参的值传递给形参；而在带参数的宏中，只是符号的替换，不存在值传递的问题。

【示例】输入 n，输出 (n+1)^2 的值。
#include <stdio.h>
#define SQ(y) (y)*(y)
int main(){
    int a, sq;
    printf("input a number: ");
    scanf("%d", &a);
    sq = SQ(a+1);
    printf("sq=%d\n", sq);
    return 0;
}
运行结果：
input a number: 9
sq=100

第2行为宏定义，形参为 y。第7行宏调用中实参为 a+1，是一个表达式，在宏展开时，用 a+1 代换 y，再用 (y)*(y) 代换 SQ，得到如下语句：
sq=(a+1)*(a+1);
这与函数的调用是不同的，函数调用时要把实参表达式的值求出来再传递给形参，而宏展开中对实参表达式不作计算，直接按照原样替换。

3) 在宏定义中，字符串内的形参通常要用括号括起来以避免出错。例如上面的宏定义中 (y)*(y) 表达式的 y 都用括号括起来，因此结果是正确的。如果去掉括号，把程序改为以下形式：
#include <stdio.h>
#define SQ(y) y*y
int main(){
    int a, sq;
    printf("input a number: ");
    scanf("%d", &a);
    sq = SQ(a+1);
    printf("sq=%d\n", sq);
    return 0;
}
运行结果为：
input a number: 9
sq=19
同样输入9，但结果却是不一样的。问题在哪里呢？这是由于替换只作符号替换而不作其它处理而造成的。宏替换后将得到以下语句：
sq=a+1*a+1;
由于a为9故sq的值为19。这显然与题意相违，因此参数两边的括号是不能少的。即使在参数两边加括号还是不够的，请看下面程序：
#include <stdio.h>
#define SQ(y) (y)*(y)
int main(){
    int a,sq;
    printf("input a number: ");
    scanf("%d", &a);
    sq = 200 / SQ(a+1);
    printf("sq=%d\n", sq);
    return 0;
}
与前面的代码相比，只是把宏调用语句改为：
sq=200/SQ(a+1);
运行程序后，如果仍然输入 9，那么我们希望的结果为 2。但实际情况并非如此：
input a number: 9
sq=200

为什么会得这样的结果呢？分析宏调用语句，在宏展开之后变为：
sq=200/(a+1)*(a+1);
a 为 9 时，由于“/”和“*”运算符优先级和结合性相同，所以先计算 200/(9+1)，结果为 20，再计算 20*(9+1)，最后得到 200。

为了得到正确答案，应该在宏定义中的整个字符串外加括号：
#include <stdio.h>
#define SQ(y) ((y)*(y))
int main(){
    int a,sq;
    printf("input a number: ");
    scanf("%d", &a);
    sq = 200 / SQ(a+1);
    printf("sq=%d\n", sq);
    return 0;
}
由此可见，对于带参宏定义不仅要在参数两侧加括号，还应该在整个字符串外加括号。
